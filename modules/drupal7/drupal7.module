 <?php
/**
 * @file
 * Drupal 7.x module for the User Attribute Fetcher
 *
 * Provides a way for uaf to query Drupal 7 for user attributes
 *
 * @author Steve Moitozo <steve_moitozo@sil.org>
 *
 * Copyright SIL International
 * Licensed under the GPL v2.0
 * http://www.gnu.org/licenses/gpl-2.0.html
 *
 * Written for the Polder Consortium
 * http://www.polderconsortium.org
 *
 * Project Web site
 * http://code.google.com/p/uaf/
 *
 * See the README and INSTALL for more information.
 */


/**
 * Drupal module class.
 *
 * This class extends the uaf_module class.
 *
 * @package uaf
 * @version $Id$
 */
class drupal7_module extends uaf_module {


  /**
   * Initialize the module.
   *
   * @param array $config  The configuration array for the module
   */
  function __construct($config) {
    parent::__construct($config);
  }

  /**
   * Fetch the user attributes from the Drupal 7 site.
   *
   * @param string $userIdentifier The unique user identifier for looking up the user.
   * @return array the array of user attributes
   */
  public function fetchUserAttributes($userIdentifier) {

    // Make sure we know where Drupal 7 is and which site to bootstrap when it's time.
    define('DRUPAL_ROOT', $this->config['user_app']['path']);
    if (!file_exists(DRUPAL_ROOT)) {
      bailout('Can\'t find Drupal.');
    }

    // We're still running, bootstrap Drupal.
    require_once(DRUPAL_ROOT . '/includes/bootstrap.inc');

    drupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);

    // We need to be able to call Drupal user_external_load function so load the required modules.
    drupal_load('module', 'system');
    drupal_load('module', 'user');

    // Find the Drupal user.
    $user = user_external_load($userIdentifier);

    // All real Drupal user's have an uid higher than 0 and names.
    if ((isset($user->uid) && 0 == $user->uid) || !isset($user->name)) {
      bailout('Failed to locate Drupal user.');
    }

    // Grab the user attributes.
    foreach($this->attributeNames as $strAttrName) {
      if(isset($user->$strAttrName) && $user->$strAttrName) {
        if (is_array($user->$strAttrName) || is_numeric($user->$strAttrName) || is_string($user->$strAttrName)) {
            $arrUserAttrs[$strAttrName] = $user->$strAttrName;
        }
      }
    }

    return $arrUserAttrs;
  }
}
